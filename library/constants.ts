// by: Olesa tanya 	<https://github.com/olesatanya>
// 3/8/2022


export const METHOD_TYPE = {
	ADD_ETHEREUM_CHAIN: 'wallet_addEthereumChain',
	ETH_ACCOUNTS: 'eth_accounts',
	ETH_REQUEST_ACCOUNTS: 'eth_requestAccounts',
	ETH_SIGN: 'eth_sign',
	WATCH_ASSET: 'wallet_watchAsset',
	SWITCH_ETHEREUM_CHAIN: 'wallet_switchEthereumChain',
	WALLET_SCAN_QRCODE: 'wallet_scanQRCode',
	WALLET_REQUEST_PERMISSION: 'wallet_requestPermissions',
	WALLET_GET_PERMISSION: 'wallet_getPermissions',
	WALLET_REGISTER_ONBOARDING: 'wallet_registerOnboarding',
	ETH_SEND_TRANSACTION: 'eth_sendTransaction',
	ETH_CHAIN_ID: 'eth_chainId',
	ETH_SIGN_DATA_V4: "eth_signTypedData_v4",
	ETH_SIGN_DATA_V3: "eth_signTypedData_v3",
	ETH_SIGN_DATA: "eth_signTypedData",
	PERSONAL_SIGN: "personal_sign",
	RECOVER_PERSONAL: "personal_ecRecover",
	GET_ENCRYPT_KEY:"eth_getEncryptionPublicKey",
	ETH_SIGN_TRANSACTION:"eth_signTransaction"
};


export const rpcMethods = Object.freeze([
	'eth_blockNumber',
	'eth_call',
	'eth_coinbase',
	'eth_decrypt',
	'eth_estimateGas',
	'eth_feeHistory',
	'eth_gasPrice',
	'eth_getBalance',
	'eth_getBlockByHash',
	'eth_getBlockByNumber',
	'eth_getBlockTransactionCountByHash',
	'eth_getBlockTransactionCountByNumber',
	'eth_getCode',
	'eth_getEncryptionPublicKey',
	'eth_getFilterChanges',
	'eth_getFilterLogs',
	'eth_getLogs',
	'eth_getProof',
	'eth_getStorageAt',
	'eth_getTransactionByBlockHashAndIndex',
	'eth_getTransactionByBlockNumberAndIndex',
	'eth_getTransactionByHash',
	'eth_getTransactionCount',
	'eth_getTransactionReceipt',
	'eth_getUncleByBlockHashAndIndex',
	'eth_getUncleByBlockNumberAndIndex',
	'eth_getUncleCountByBlockHash',
	'eth_getUncleCountByBlockNumber',
	'eth_getWork',
	'eth_hashrate',
	'eth_mining',
	'eth_newBlockFilter',
	'eth_newFilter',
	'eth_newPendingTransactionFilter',
	'eth_protocolVersion',
	'eth_sendRawTransaction',
	// 'eth_sendTransaction',
	// 'eth_sign',
	'eth_submitHashrate',
	'eth_submitWork',
	'eth_syncing',
	'eth_uninstallFilter',
	'net_listening',
	'net_peerCount',
	'net_version',
	'web3_clientVersion',
	'web3_sha3',
]);

export const DEFAULT_NETWORKS = [
	{
		chainKey:			"neon",
		testnet:			false,
		label: 				"Neon Mainnet",
		rpc: 				"https://mainnet.neonlink.io",
		chainId: 			259,
		symbol: 			"NEON",
		url: 				"https://scan.neonlink.io/",
		imported:			false
	},
	{
		chainKey:			"neontestnet",
		testnet:			true,
		label: 				"Neon Testnet",
		rpc: 				"https://testnet.neonlink.io/",
		chainId: 			9559,
		symbol: 			"NEON",
		url: 				"https://testnet-scan.neonlink.io/",
		imported:			false
	},
] as NetworkObject[]

export const DEFAULT_IMPORT_NETWORKS = [
	{
		chainKey:			"ethereum",
		testnet:			false,
		label: 				"Ethereum Mainnet",
		rpc: 				"https://eth-mainnet.nodereal.io/v1/1659dfb40aa24bbb8153a677b98064d7",
		chainId: 			1,
		symbol: 			"ETH",
		url: 				"https://etherscan.io/",
		imported:			true,
	},
	{
		chainKey:			"binancemainnet",
		testnet:			false,
		label: 				"Binance Smart Chain Mainnet",
		rpc: 				"https://bsc.mytokenpocket.vip",
		chainId: 			56,
		symbol: 			"BNB",
		url: 				"https://bscscan.com/",
		imported:			true,
	},
	{
		chainKey:			"avalanche",
		testnet:			false,
		label: 				"Avalanche C-Chain",
		rpc: 				"https://api.avax.network/ext/bc/C/rpc",
		chainId: 			43114,
		symbol: 			"AVAX",
		url: 				"https://avascan.info/",
		imported:			true,
	},
	{
		chainKey:			"polygon",
		testnet:			false,
		label: 				"Polygon Mainnet",
		rpc: 				"https://polygon-mainnet.public.blastapi.io",
		chainId: 			137,
		symbol: 			"MATIC",
		url: 				"https://polygonscan.com/",
		imported:			true,
	},
	{
		chainKey:			"fantomopera",
		testnet:			false,
		label: 				"Fantom Opera",
		rpc: 				"https://rpc2.fantom.network",
		chainId: 			250,
		symbol: 			"FTM",
		url: 				"https://ftmscan.com/",
		imported:			true,
	},
	{
		chainKey:			"moonbeam",
		testnet:			false,
		label: 				"Moonbeam",
		rpc: 				"wss://wss.api.moonbeam.network",
		chainId: 			1284,
		symbol: 			"GLMR",
		url: 				"https://moonscan.io/",
		imported:			true,
	},
	{
		chainKey:			"moonriver",
		testnet:			false,
		label: 				"Moonriver",
		rpc: 				"https://moonriver.api.onfinality.io/rpc?apikey=673e1fae-c9c9-4c7f-a3d5-2121e8274366",
		chainId: 			1285,
		symbol: 			"MOVR",
		url: 				"https://moonriver.moonscan.io/",
		imported:			true,
	},
	{
		chainKey:			"rinkeby",
		testnet:			true,
		label: 				"Rinkeby Testnet",
		rpc: 				"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",
		chainId: 			4,
		symbol: 			"ETH",
		url: 				"https://rinkeby.etherscan.io/",
		imported:			true,
	},
	{
		chainKey:			"ropsten",
		testnet:			true,
		label: 				"Ropsten Testnet",
		rpc: 				"https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",
		chainId: 			3,
		symbol: 			"ETH",
		url: 				"https://ropsten.etherscan.io/",
		imported:			true,
	},
	{
		chainKey:			"Kovan",
		testnet:			true,
		label: 				"Kovan Testnet",
		rpc: 				"ws://kovan.poa.network:8546",
		chainId: 			42,
		symbol: 			"ETH",
		url: 				"https://kovan.etherscan.io/",
		imported:			true,
	},
	{
		chainKey:			"bsctest",
		testnet:			true,
		label: 				"Binance Smart Chain Testnet",
		rpc: 				"https://bsctestapi.terminet.io/rpc",
		chainId: 			97,
		symbol: 			"tBNB",
		url: 				"https://testnet.bscscan.com/",
		imported:			true,
	},
	{
		chainKey:			"avalenchetest",
		testnet:			true,
		label: 				"Avalanche Fuji Testnet",
		rpc: 				"https://rpc.ankr.com/avalanche_fuji",
		chainId: 			43113,
		symbol: 			"AVAX",
		url: 				"https://testnet.avascan.info/",
		imported:			true,
	},
	{
		chainKey:			"fantom testnet",
		testnet:			true,
		label: 				"Fantom Testnet",
		rpc: 				"https://rpc.testnet.fantom.network",
		chainId: 			4002,
		symbol: 			"FTM",
		url: 				"https://testnet.ftmscan.com/",
		imported:			true,
	},
	{
		chainKey:			"Mumbai",
		testnet:			true,
		label: 				"Mumbai Testnet",
		rpc: 				"https://polygontestapi.terminet.io/rpc",
		chainId: 			80001,
		symbol: 			"MATIC",
		url: 				"https://mumbai.polygonscan.com/",
		imported:			true,
	}
] as NetworkObject[]